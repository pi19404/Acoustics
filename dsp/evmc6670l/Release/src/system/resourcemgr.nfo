TMS320C6x C/C++ Optimizer               v7.4.0
Build Number 1MGRS-0QTSRVUW-UARAR-SAW-ZAZG_X_U_Q

		======File-level Analysis Summary======


static void CACHE_invL1d() is called from 2 sites in this file.
    It appears to be inlineable (size = 30 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_invL1dWait() (1 times)

static void CACHE_invL1dWait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_invL2() is called from 2 sites in this file.
    It appears to be inlineable (size = 30 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_invL2Wait() (1 times)

static void CACHE_invL2Wait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_wbL1d() is called from 4 sites in this file.
    It appears to be inlineable (size = 30 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_wbL1dWait() (1 times)

static void CACHE_wbL1dWait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void CACHE_wbL2() is called from 4 sites in this file.
    It appears to be inlineable (size = 30 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_wbL2Wait() (1 times)

static void CACHE_wbL2Wait() is called from 1 sites in this file.
    It appears to be inlineable (size = 13 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static int Download_PAFirmware() is called from 1 sites in this file.
    It appears to be inlineable (size = 44 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Pa_downloadImage() (3 times)
	Pa_resetControl() (2 times)

extern int QMSS_QPOP() is called from 0 sites in this file.
    It appears to be inlineable (size = 41 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_invL2() (2 times)
	CACHE_invL1d() (2 times)
	Qmss_queuePop() (1 times)

extern void QMSS_QPUSH() is called from 0 sites in this file.
    It appears to be inlineable (size = 32 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Qmss_queuePushDescSize() (1 times)
	CACHE_wbL2() (2 times)
	CACHE_wbL1d() (2 times)

extern void QMSS_QPUSHDESCSIZE() is called from 0 sites in this file.
    It appears to be inlineable (size = 32 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Qmss_queuePushDescSize() (1 times)
	CACHE_wbL2() (2 times)
	CACHE_wbL1d() (2 times)

static void *Qmss_queuePop() is called from 1 sites in this file.
    It appears to be inlineable (size = 10 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

static void Qmss_queuePushDescSize() is called from 2 sites in this file.
    It appears to be inlineable (size = 20 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern unsigned *res_mgr_cppi_get_passhandle() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern void *res_mgr_get_painstance() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern int res_mgr_init_cppi() is called from 0 sites in this file.
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Cppi_setCpdmaLoopback() (1 times)
	Cppi_rxChannelOpen() (1 times)
	Cppi_channelEnable() (2 times)
	Cppi_txChannelOpen() (1 times)
	Cppi_open() (1 times)
	memcpy() (1 times)
	memset() (1 times)
	platform_write() (4 times)
	Cppi_init() (1 times)

extern int res_mgr_init_pass() is called from 0 sites in this file.
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Download_PAFirmware() (1 times)
	Pa_create() (1 times)
	platform_write() (8 times)
	Pa_getBufferReq() (1 times)

extern int res_mgr_init_qmss() is called from 0 sites in this file.
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Cppi_initDescriptor() (1 times)
	Qmss_insertMemoryRegion() (1 times)
	Convert_CoreLocal2GlobalAddr() (1 times)
	Qmss_start() (1 times)
	platform_write() (5 times)
	Qmss_init() (1 times)
	memset() (3 times)

extern int res_mgr_qmss_get_freeq() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

extern int res_mgr_stop_cppi() is called from 0 sites in this file.
    It appears to be inlineable (size = 70 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Cppi_channelClose() (2 times)

extern int res_mgr_stop_qmss() is called from 0 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Qmss_queueClose() (1 times)

Global variable is not referenced in this file:
	extern const int mSize
	extern const int c2Size
	extern const int c1Size

Address of global variable is never taken:
	extern unsigned gQPushErrorCounter
	extern unsigned gQPopErrorCounter
	extern int gGlobalFreeQHnd


These functions may be recursive:
	res_mgr_init_cppi()
	res_mgr_init_pass()
	Download_PAFirmware()
	res_mgr_init_qmss()
	res_mgr_stop_cppi()
	res_mgr_stop_qmss()

Function CACHE_invL2() will be specialized on these parameters:
	[3] wait == 1;

Results of interprocedural value propagation:

   static void CACHE_invL2() has these parameter attributes:
      int wait :          wait == 1;

Function CACHE_invL1d() will be specialized on these parameters:
	[3] wait == 1;

Results of interprocedural value propagation:

   static void CACHE_invL1d() has these parameter attributes:
      int wait :          wait == 1;

Function CACHE_wbL2() will be specialized on these parameters:
	[3] wait == 1;

Results of interprocedural value propagation:

   static void CACHE_wbL2() has these parameter attributes:
      int wait :          wait == 1;

Function CACHE_wbL1d() will be specialized on these parameters:
	[3] wait == 1;

Results of interprocedural value propagation:

   static void CACHE_wbL1d() has these parameter attributes:
      int wait :          wait == 1;
Inlineable function will be suppressed: Qmss_queuePop()
Inlineable function will be suppressed: CACHE_wbL1dWait()
Inlineable function will be suppressed: CACHE_wbL2Wait()
Inlineable function will be suppressed: CACHE_invL1dWait()
Inlineable function will be suppressed: CACHE_invL2Wait()
Inlineable function will be suppressed: CACHE_wbL2()
Inlineable function will be suppressed: CACHE_wbL1d()
Inlineable function will be suppressed: CACHE_invL1d()
Inlineable function will be suppressed: CACHE_invL2()
Inlineable function will be suppressed: Qmss_queuePushDescSize()

These external functions are called but not defined here:
	memset()
	memcpy()
	Qmss_queueClose()
	Cppi_channelClose()
	Qmss_init()
	Qmss_start()
	Convert_CoreLocal2GlobalAddr()
	Qmss_insertMemoryRegion()
	Cppi_initDescriptor()
	Pa_getBufferReq()
	Pa_create()
	Cppi_init()
	platform_write()
	Cppi_open()
	Cppi_txChannelOpen()
	Cppi_channelEnable()
	Cppi_rxChannelOpen()
	Cppi_setCpdmaLoopback()
	Pa_resetControl()
	Pa_downloadImage()


		======= End file-level Analysis =======


==============================================================================

extern int res_mgr_stop_qmss() is called from 0 sites in this file.
    It appears to be inlineable (size = 4 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 1 memory accesses with 0 dependences.


==============================================================================

extern int res_mgr_stop_cppi() is called from 0 sites in this file.
    It appears to be inlineable (size = 70 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 6 memory accesses with 0 dependences.


==============================================================================

extern int res_mgr_qmss_get_freeq() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 1 memory accesses with 0 dependences.


==============================================================================

extern int res_mgr_init_qmss() is called from 0 sites in this file.
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 40 memory accesses with 3 dependences.


==============================================================================

static int Download_PAFirmware() is called from 1 sites in this file.
    It appears to be inlineable (size = 44 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 5 memory accesses with 0 dependences.


==============================================================================

extern int res_mgr_init_pass() is called from 0 sites in this file.
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Download_PAFirmware() (1 times)

There are 19 memory accesses with 6 dependences.


==============================================================================

extern int res_mgr_init_cppi() is called from 0 sites in this file.
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

ADVICE: In function res_mgr_init_cppi() in /home/gtbldadm/ti/mcsdk_2_01_02_06/demos/hua/src/system/resourcemgr.c
	in the 'for' loop at lines /home/gtbldadm/ti/mcsdk_2_01_02_06/demos/hua/src/system/resourcemgr.c:547-573
	for the statement *p_ch_handle = T$2; at line 566
	and the statement if ( (unsigned)i < (*p_cppi_cfg).num_tx_queues ) goto g16; else goto g24; at line 547

	Consider specifying option "-mt"
	or declaring 'p_ch_handle' as unsigned ** restrict p_ch_handle
	or declaring 'p_cppi_cfg' as  struct PPI_CFG_Tag * const restrict p_cppi_cfg
	to assert that 'p_ch_handle' in the address of *p_ch_handle;
	and            'p_cppi_cfg' in the address of (*p_cppi_cfg).num_tx_queues;
	do not access the same object in memory.

There are 26 memory accesses with 27 dependences.


==============================================================================

extern void *res_mgr_get_painstance() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 1 memory accesses with 0 dependences.


==============================================================================

extern unsigned *res_mgr_cppi_get_passhandle() is called from 0 sites in this file.
    It appears to be inlineable (size = 2 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	<NONE>

There are 1 memory accesses with 0 dependences.


==============================================================================

extern void QMSS_QPUSHDESCSIZE() is called from 0 sites in this file.
    It appears to be inlineable (size = 32 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_wbL1d() (2 times)
	CACHE_wbL2() (2 times)
	Qmss_queuePushDescSize() (1 times)

There are 24 memory accesses with 140 dependences.


==============================================================================

extern void QMSS_QPUSH() is called from 0 sites in this file.
    It appears to be inlineable (size = 32 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	CACHE_wbL1d() (2 times)
	CACHE_wbL2() (2 times)
	Qmss_queuePushDescSize() (1 times)

There are 24 memory accesses with 140 dependences.


==============================================================================

extern int QMSS_QPOP() is called from 0 sites in this file.
    It appears to be inlineable (size = 41 units)
    It has 3 non-trivial scope blocks nested 3 deep.
    It calls these functions:
	Qmss_queuePop() (1 times)
	CACHE_invL1d() (2 times)
	CACHE_invL2() (2 times)

There are 23 memory accesses with 135 dependences.

<<NULL MIX DOMAIN>>

== END OF INFO OUTPUT==
